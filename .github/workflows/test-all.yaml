name: Test

on:
  pull_request_target:
    branches:
      - main
    paths:
      - 'src/**'
      - 'subgraphs/**'
      - '*.json'
      - '*.yaml'
      - '*.graphql'
      - '*.template'
  workflow_call:

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: generate matrix
        id: matrix
        run: |
          echo "matrix=$(ls implementations | jq -cnR '[inputs | select(. | test("^[a-z]") and . != "appsync" and . != "stepzen")]')" >> $GITHUB_OUTPUT

  test:
    needs: build-matrix
    strategy:
      fail-fast: false
      matrix:
        name: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    uses: ./.github/workflows/test-subgraph.yaml
    with:
      library: ${{ matrix.name }}

  # need secrets so appsync is configured separately
  test-appsync:
    uses: ./.github/workflows/test-subgraph.yaml
    with:
      library: "appsync"
    secrets:
      API_KEY: ${{ secrets.API_KEY_APPSYNC }}
      TEST_URL: ${{ secrets.URL_APPSYNC }}
  
  # need secrets so stepzen is configured separately
  test-stepzen:
    uses: ./.github/workflows/test-subgraph.yaml
    with:
      library: "stepzen"
    secrets:
      TEST_URL: ${{ secrets.URL_STEPZEN }}

  results:
    timeout-minutes: 10
    needs: [test, test-appsync, test-stepzen]
    runs-on: ubuntu-latest

    steps:
      - name: Download results
        uses: actions/download-artifact@v3
      - run: |
          echo "listing results"
          ls results*/results*.json

      # echo "generating final results json"
      # jq -s 'add results*/results*.json > results.json
      # echo "results"
      # cat results.json
      # TODO generate Markdown from merged JSON
